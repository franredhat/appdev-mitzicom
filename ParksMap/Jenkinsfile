// Jenkinsfile for ParksMap
podTemplate(
  label: "skopeo-pod",
  cloud: "openshift",
  inheritFrom: "maven",
  containers: [
    containerTemplate(
      name: "jnlp",
      image: "docker-registry.default.svc:5000/frodrigu-jenkins/jenkins-slave-maven-centos7:v3.9",
      resourceRequestMemory: "1Gi",
      resourceLimitMemory: "2Gi"
    )
  ]
) {
  node('skopeo-pod') {
    def GUID = "frodrigu"
    echo "GUID: ${GUID}"
    echo "Wolfgang Nexus configuration"
    sh "curl -o setup_nexus3.sh -s https://raw.githubusercontent.com/wkulhanek/ocp_advanced_development_resources/master/nexus/setup_nexus3.sh"
    sh "chmod +x setup_nexus3.sh"
    sh "./setup_nexus3.sh admin admin123 http://nexus3-${GUID}-nexus.apps.na39.openshift.opentlc.com"
    sh "rm setup_nexus3.sh"
    git 'https://github.com/franredhat/appdev-mitzicom.git'
    echo "Changing to MLBParks dir"
    dir ('MLBParks') {
      sh 'pwd; ls'
      def GUID = "frodrigu"
      echo "GUID: ${GUID}"
      git 'https://github.com/franredhat/appdev-mitzicom.git'
      echo "Packaging ParksMap"
      sh "cd ParksMap"
      sh "mvn -s ../nexus_settings.xml clean package -DskipTests=true"
      //echo "ParksMap unit tests"
      //sh "mvn -s ../nexus_settings.xml test"
      echo "Running ParksMap Code Analyses"
      sh "mvn -s ../nexus_settings.xml deploy -DskipTests=true -DaltDeploymentRepository=nexus::default::http://nexus3-${GUID}-nexus.apps.na39.openshift.opentlc.com/repository/releases"
      
      echo "Building container image ParksMap:0.0-0"
      sh "ls ./target/ | grep .war"
      sh "oc start-build parksmap --follow --from-file=./target/parksmap -n ${GUID}-parks-dev"
      openshiftTag alias: 'false', destStream: 'ParksMap', destTag: 0.0-0, destinationNamespace: "${GUID}-parks-dev", namespace: "${GUID}-parks-dev", srcStream: 'ParksMap', srcTag: 'latest', verbose: 'false'
      echo "Publishing ParksMap to Nexus"
      sh "mvn -s ../nexus_settings.xml deploy -DskipTests=true -DaltDeploymentRepository=nexus::default::http://nexus3-${GUID}-nexus.apps.na39.openshift.opentlc.com/repository/releases"
      echo "Deploying container image to Development Project"
      sh "oc set image dc/parksmap parksmap=docker-registry.default.svc:5000/${GUID}-parks-dev/parksmap:0.0-0 -n ${GUID}-parks-dev"
      openshiftDeploy depCfg: 'parksmap', namespace: "${GUID}-parks-dev", verbose: 'false', waitTime: '', waitUnit: 'sec'
      echo "Running integration tests"
      curl "http://parksmap-${GUID}-parks-dev.apps.na39.openshift.opentlc.com/ws/data/load/" 
    }
  }
}

// Convenience Functions to read variables from the pom.xml
// Do not change anything below this line.
def getVersionFromPom(pom) {
  def matcher = readFile(pom) =~ '<version>(.+)</version>'
  matcher ? matcher[0][1] : null
}
def getGroupIdFromPom(pom) {
  def matcher = readFile(pom) =~ '<groupId>(.+)</groupId>'
  matcher ? matcher[0][1] : null
}
def getArtifactIdFromPom(pom) {
  def matcher = readFile(pom) =~ '<artifactId>(.+)</artifactId>'
  matcher ? matcher[0][1] : null
}
